name: Cargo Build & Test

on:
  push:
  pull_request:

env: 
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
        platform:
          - name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu

          - name: Windows-x86_64-msvc
            os: windows-latest
            target: x86_64-pc-windows-msvc

          - name: MacOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: check default features
        working-directory: ./openjp2-rs
        run: cargo check --verbose
      - name: check features std
        working-directory: ./openjp2-rs
        run: cargo check --no-default-features --features std
      - name: check features std,file-io
        working-directory: ./openjp2-rs
        run: cargo check --no-default-features --features std,file-io
      - name: build
        working-directory: ./openjp2-rs
        run: cargo build --verbose
      - name: test
        working-directory: ./openjp2-rs
        run: cargo test --verbose

